--- d:\emerald\original\emeralddebugger.cs	Wed Oct 30 21:10:34 2024
+++ emeralddebugger.cs	Sun Dec 01 19:27:45 2024
@@ -1,5 +1,10 @@
 using UnityEngine;
 
+#if ASTAR
+using Pathfinding;                  // DKE: Referencing the AStarPathfinding code. If necessary also update your code assemblies.
+using System.Collections.Generic;   // DKE: Needed for the List<> class in method DrawNavMeshPathInternal()
+#endif
+
 namespace EmeraldAI
 {
     [HelpURL("https://black-horizon-studios.gitbook.io/emerald-ai-wiki/emerald-components-optional/debugger-component")]
@@ -172,11 +177,24 @@
         {
             if (EnableDebuggingTools == YesOrNo.No || DrawNavMeshPath == YesOrNo.No) return;
 
+#if ASTAR
+            // DKE: rewritten for AStarPathfinding, see: https://www.arongranberg.com/astar/documentation/5_2_4_67ce3f038/aipath/getremainingpath.html#GetRemainingPath    
+
+            List<Vector3> buffer = new List<Vector3>();
+
+            EmeraldComponent.m_NavMeshAgent.GetRemainingPath(buffer, out bool stale);
+            for (int i = 0; i < buffer.Count - 1; i++) 
+            {
+                Debug.DrawLine(buffer[i], buffer[i+1], NavMeshPathColor);
+            }
+#else            
             for (int i = 0; i < EmeraldComponent.m_NavMeshAgent.path.corners.Length; i++)
             {
                 if (i > 0) Debug.DrawLine(EmeraldComponent.m_NavMeshAgent.path.corners[i - 1] + Vector3.up * 0.5f, EmeraldComponent.m_NavMeshAgent.path.corners[i] + Vector3.up * 0.5f, NavMeshPathColor);
                 else Debug.DrawLine(EmeraldComponent.m_NavMeshAgent.path.corners[0] + Vector3.up * 0.5f, EmeraldComponent.m_NavMeshAgent.path.corners[i] + Vector3.up * 0.5f, NavMeshPathColor);
             }
+            
+#endif
         }
 
         /// <summary>
